@import com.innovenso.townplanner.model.concepts.Technology
@import txt.Drawing
@import com.innovenso.townplanner.io.latex.LatexFormat
@import com.innovenso.townplanner.model.concepts.properties.BeInvestedIn
@import com.innovenso.townplanner.model.concepts.properties.BeTolerated
@import com.innovenso.townplanner.model.concepts.properties.BeMigrated
@import com.innovenso.townplanner.model.concepts.properties.BeEliminated
@import latex.lib.tikz.txt.TikzPicture
@import com.innovenso.townplanner.io.latex.model.TikzThis
@import com.innovenso.townplanner.io.latex.model.TikzNode
@import com.innovenso.townplanner.io.latex.model.Rotate
@import com.innovenso.townplanner.io.latex.model.Text
@import com.innovenso.townplanner.io.latex.model.FootnoteFont
@import com.innovenso.townplanner.io.latex.model.TextCentered
@import com.innovenso.townplanner.io.latex.model.TikzLine
@import com.innovenso.townplanner.io.latex.model.TinyFont
@import com.innovenso.townplanner.io.latex.model.Anchor
@import com.innovenso.townplanner.io.latex.model.North
@import com.innovenso.townplanner.io.latex.model.Midway
@import com.innovenso.townplanner.io.latex.model.TextHeight
@(technology: Technology)
@TikzPicture(List(
  TikzThis("\\draw[] (1cm,0) arc[start angle=0, end angle=90,radius=1cm]"),
  TikzThis("\\draw[] (2cm,0) arc[start angle=0, end angle=90,radius=2cm]"),
    TikzThis("\\draw[] (3cm,0) arc[start angle=0, end angle=90,radius=3cm]"),
    TikzThis("\\draw[] (0,4cm) arc[start angle=90, end angle=0,radius=4cm]"),
    TikzThis("\\draw (0,0) -- (0,4cm)"),
    TikzNode(title = technology.technologyType, at=Some((-2,20)), configuration = List(Rotate(90), Text("lightgray"), FootnoteFont, TextCentered)),
    TikzLine(0, 0, 10, 0, Some(BeInvestedIn().name), List(TinyFont, Anchor(North), Midway, Text("black"), TextHeight(2))),
    TikzLine(10, 0, 20, 0, Some(BeTolerated().name), List(TinyFont, Anchor(North), Midway, Text("black"), TextHeight(2))),
    TikzLine(20, 0, 30, 0, Some(BeMigrated().name), List(TinyFont, Anchor(North), Midway, Text("black"), TextHeight(2))),
    TikzLine(30, 0, 40, 0, Some(BeEliminated().name), List(TinyFont, Anchor(North), Midway, Text("black"), TextHeight(2))),
    technology.architectureVerdict match {
        case _: BeInvestedIn => {
            TikzThis("\\node[font=\\small] at (45:0.5cm)  { \\faMapMarker* }");
        }
        case _: BeTolerated => {
            TikzThis("\\node[font=\\small] at (45:1.5cm)  { \\faMapMarker* }");
        }
        case _: BeMigrated => {
            TikzThis("\\node[font=\\small] at (45:2.5cm)  { \\faMapMarker* }");
        }
        case _: BeEliminated => {
            TikzThis("\\node[font=\\small] at (45:3.5cm)  { \\faMapMarker* }");
        }
    }
))
