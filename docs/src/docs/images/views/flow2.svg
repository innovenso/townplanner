<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="884px" preserveAspectRatio="none" style="width:540px;height:884px;background:#FFFFFF;" version="1.1" viewBox="0 0 540 884" width="540px" zoomAndPan="magnify"><defs/><g><!--MD5=[4c18d91c9f7f4084e50c172042dd1a31]
cluster ab1d84ee_fc06_4c09_84c6_00afe141d135--><g id="cluster_ab1d84ee_fc06_4c09_84c6_00afe141d135"><rect height="607" rx="2.5" ry="2.5" style="stroke:#444444;stroke-width:1.0;fill:none;stroke-dasharray:7.0,7.0;" width="527" x="7" y="7"/><text fill="#444444" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="266" x="137.5" y="23.8516">BatCave Management System</text><text fill="#444444" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="62" x="239.5" y="38.7637">[System]</text></g><!--MD5=[07b017cceb61665286b2b633b64851c5]
entity 4ef45909_2c16_44c4_a89e_7e35db55f7d1--><g id="elem_4ef45909_2c16_44c4_a89e_7e35db55f7d1"><path d="M81,68 C81,58 190,58 190,58 C190,58 299,58 299,68 L299,174.7813 C299,184.7813 190,184.7813 190,184.7813 C190,184.7813 81,184.7813 81,174.7813 L81,68 " fill="#3CB371" style="stroke:#3C7FC0;stroke-width:0.5;"/><path d="M81,68 C81,78 190,78 190,78 C190,78 299,78 299,68 " fill="none" style="stroke:#3C7FC0;stroke-width:0.5;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="164" x="108" y="96.8516">Nemesis Database</text><text fill="#FFFFFF" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="14" x="183" y="111.7637">[ ]</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="188" y="127.5889"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="194" x="91" y="143.8857">A huge database with all the</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="185" x="95.5" y="160.1826">files of supervillains around</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="64" x="158" y="176.4795">the world</text></g><!--MD5=[f0316f0d2f6fb7b38e6e53dd22a04907]
entity 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a--><g id="elem_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a"><path d="M160,274 L338,274 L356,292 L356,357.4844 L338,375.4844 L160,375.4844 L142,357.4844 L142,292 L160,274 " fill="#6495ED" style="stroke:#3C7FC0;stroke-width:0.5;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="194" x="152" y="298.8516">Nemesis Microservice</text><text fill="#FFFFFF" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="40" x="229" y="313.7637">[ Java]</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="247" y="329.5889"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="187" x="153.5" y="345.8857">The single point of truth for</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="84" x="207" y="362.1826">supervillains</text></g><!--MD5=[1e0b15410cea130a3782c481a4e11bb9]
entity 8dff98b1_63f3_491f_af9c_a4e6dfb5e012--><g id="elem_8dff98b1_63f3_491f_af9c_a4e6dfb5e012"><path d="M41,471 L219,471 L237,489 L237,573.1094 L219,591.1094 L41,591.1094 L23,573.1094 L23,489 L41,471 " fill="#6495ED" style="stroke:#3C7FC0;stroke-width:0.5;"/><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="169" x="42.5" y="495.8516">Batmobile Platform</text><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="194" x="33" y="514.4766">Rotation Microservice</text><text fill="#FFFFFF" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="40" x="110" y="529.3887">[ Java]</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="128" y="545.2139"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="51" y="561.5107">Rotates the Batmobile</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="56" x="102" y="577.8076">platform</text></g><!--MD5=[8fdc1f67addd33cdb2ae52cfa079f21e]
entity 6d811439_33e7_4864_823a_b25556a7458d--><g id="elem_6d811439_33e7_4864_823a_b25556a7458d"><rect fill="#FF7F50" height="134.0781" rx="2.5" ry="2.5" style="stroke:#3C7FC0;stroke-width:0.5;" width="197" x="283.5" y="464"/><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="152" x="306" y="488.8516">Batcave Terminal</text><text fill="#FFFFFF" font-family="sans-serif" font-size="12" font-style="italic" lengthAdjust="spacing" textLength="50" x="357" y="503.7637">[ React]</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="380" y="519.5889"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="173" x="293.5" y="535.8857">Impressive user interface</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="154" x="303" y="552.1826">used to manage every</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="152" x="304" y="568.4795">aspect of the BatCave</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="146" x="309" y="584.7764">Management System</text></g><!--MD5=[24189cafae41b083e1a839486b09cc20]
entity 9187aa94_04dd_4766_af68_00bb6800fbfb--><g id="elem_9187aa94_04dd_4766_af68_00bb6800fbfb"><ellipse cx="382" cy="704.3318" fill="#08427B" rx="15.3318" ry="15.3318" style="stroke:#073B6F;stroke-width:0.5;"/><rect fill="#08427B" height="38.625" rx="15.3318" ry="15.3318" style="stroke:#073B6F;stroke-width:0.5;" width="138" x="313" y="719.6636"/><text fill="#FFFFFF" font-family="sans-serif" font-size="16" font-weight="bold" lengthAdjust="spacing" textLength="118" x="323" y="744.5152">Bruce Wayne</text></g><!--MD5=[b2031f9aeaafad7bf4c39f916866851a]
link 9187aa94_04dd_4766_af68_00bb6800fbfb to 6d811439_33e7_4864_823a_b25556a7458d--><g id="link_9187aa94_04dd_4766_af68_00bb6800fbfb_6d811439_33e7_4864_823a_b25556a7458d"><path d="M327.4,688.84 C317.93,680.35 309.4,670.35 304,659 C298.47,647.36 299.75,642.17 304,630 C306.97,621.51 311.01,613.21 315.7,605.26 " fill="none" id="9187aa94_04dd_4766_af68_00bb6800fbfb-to-6d811439_33e7_4864_823a_b25556a7458d" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="320.18,598.05,313.4108,603.2633,318.5078,606.4288,320.18,598.05" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="104" x="305" y="642.1387">1. enters Joker</text><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="85" x="316.5" y="656.1074">search term</text></g><!--MD5=[bb62195129df0e7f56751efc25efc612]
link 6d811439_33e7_4864_823a_b25556a7458d to 9187aa94_04dd_4766_af68_00bb6800fbfb--><g id="link_6d811439_33e7_4864_823a_b25556a7458d_9187aa94_04dd_4766_af68_00bb6800fbfb"><path d="M414.51,598.12 C420.4,617.68 423.23,639.17 418,659 C415.96,666.72 412.75,674.49 409.06,681.81 " fill="none" id="6d811439_33e7_4864_823a_b25556a7458d-to-9187aa94_04dd_4766_af68_00bb6800fbfb" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="405.24,688.96,411.6565,683.3183,406.3648,680.4904,405.24,688.96" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="103" x="421" y="649.1387">7. Joker profile</text></g><!--MD5=[08ed8495632ab44c1303f5470a467f02]
link 6d811439_33e7_4864_823a_b25556a7458d to 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a--><g id="link_6d811439_33e7_4864_823a_b25556a7458d_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a"><path d="M376.72,463.97 C372.82,443.86 366.2,422.48 355,405 C349.41,396.28 342.51,388.17 334.93,380.72 " fill="none" id="6d811439_33e7_4864_823a_b25556a7458d-to-7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="329.01,375.16,332.7795,382.8275,336.8917,378.4583,329.01,375.16" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="118" x="369" y="417.1387">2. passes on the</text><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="108" x="376" y="431.1074">search request</text></g><!--MD5=[d03fa69b31efa80c6f032bd3e94701af]
link 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a to 6d811439_33e7_4864_823a_b25556a7458d--><g id="link_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a_6d811439_33e7_4864_823a_b25556a7458d"><path d="M235.04,375.09 C232.27,394.45 232.63,416.21 242,434 C250.4,449.94 262.77,463.74 276.74,475.52 " fill="none" id="7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a-to-6d811439_33e7_4864_823a_b25556a7458d" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="283.26,480.79,278.9199,473.4304,275.1509,478.0989,283.26,480.79" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="103" x="243" y="424.1387">6. Joker profile</text></g><!--MD5=[cf2394d3383715352ec789dfa8c2638f]
link 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a to 4ef45909_2c16_44c4_a89e_7e35db55f7d1--><g id="link_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a_4ef45909_2c16_44c4_a89e_7e35db55f7d1"><path d="M257.66,273.98 C259.2,255.15 258.77,233.73 253,215 C250.64,207.34 247.4,199.75 243.64,192.4 " fill="none" id="7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a-to-4ef45909_2c16_44c4_a89e_7e35db55f7d1" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="239.7,185.14,240.8718,193.6033,246.1478,190.7459,239.7,185.14" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="77" x="259.5" y="227.1387">3. looks up</text><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="82" x="259" y="241.1074">information</text></g><!--MD5=[18b6f6a3a198ee4d7f96ea859ae2e085]
link 4ef45909_2c16_44c4_a89e_7e35db55f7d1 to 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a--><g id="link_4ef45909_2c16_44c4_a89e_7e35db55f7d1_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a"><path d="M143.02,185.17 C134.27,204.34 130.49,225.29 140,244 C144.44,252.73 150.33,260.72 157.09,268 " fill="none" id="4ef45909_2c16_44c4_a89e_7e35db55f7d1-to-7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="162.95,273.93,159.4538,266.1341,155.1898,270.3552,162.95,273.93" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="103" x="141" y="234.1387">4. Joker profile</text></g><!--MD5=[deb8c2f334e7cdc090487ae49ddfb061]
link 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a to 8dff98b1_63f3_491f_af9c_a4e6dfb5e012--><g id="link_7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a_8dff98b1_63f3_491f_af9c_a4e6dfb5e012"><path d="M142,344.85 C108.47,356.5 75.03,375.15 55,405 C42.39,423.8 47.75,444.72 60.06,463.99 " fill="none" id="7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a-to-8dff98b1_63f3_491f_af9c_a4e6dfb5e012" style="stroke:#666666;stroke-width:1.0;"/><polygon fill="#666666" points="64.68,470.73,62.6191,462.4383,57.6752,465.8379,64.68,470.73" style="stroke:#666666;stroke-width:1.0;"/><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="145" x="56" y="417.1387">5. requests platform</text><text fill="#666666" font-family="sans-serif" font-size="12" font-weight="bold" lengthAdjust="spacing" textLength="58" x="101.5" y="431.1074">rotation</text></g><rect height="97.4844" rx="7.5" ry="7.5" style="stroke:#00000000;stroke-width:1.0;fill:none;" width="222" x="296" y="771.2886"/><rect height="16.2969" style="stroke:none;stroke-width:1.0;fill:none;" width="210" x="302" y="779.2886"/><text fill="#000000" font-family="sans-serif" font-size="14" font-weight="bold" lengthAdjust="spacing" textLength="59" x="302" y="792.2837">Legend</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="361" y="792.2837"> </text><rect fill="#08427B" height="16.2969" style="stroke:none;stroke-width:1.0;" width="210" x="302" y="795.5855"/><text fill="#073B6F" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="306" y="808.5806">▯</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="314" y="808.5806"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="49" x="322" y="808.5806">person</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="375" y="808.5806"> </text><rect fill="#6495ED" height="16.2969" style="stroke:none;stroke-width:1.0;" width="210" x="302" y="811.8823"/><text fill="#6495ED" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="306" y="824.8775">▯</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="314" y="824.8775"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="182" x="322" y="824.8775">micro service (eight sided)</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="508" y="824.8775"> </text><rect fill="#3CB371" height="16.2969" style="stroke:none;stroke-width:1.0;" width="210" x="302" y="828.1792"/><text fill="#3CB371" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="306" y="841.1743">▯</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="314" y="841.1743"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="166" x="322" y="841.1743">database (rounded box)</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="492" y="841.1743"> </text><rect fill="#FF7F50" height="16.2969" style="stroke:none;stroke-width:1.0;" width="210" x="302" y="844.4761"/><text fill="#FF7F50" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="8" x="306" y="857.4712">▯</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="314" y="857.4712"> </text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="72" x="322" y="857.4712">terminal UI</text><text fill="#FFFFFF" font-family="sans-serif" font-size="14" lengthAdjust="spacing" textLength="4" x="398" y="857.4712"> </text><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="779.2886" y2="779.2886"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="795.5855" y2="795.5855"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="811.8823" y2="811.8823"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="828.1792" y2="828.1792"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="844.4761" y2="844.4761"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="512" y1="860.773" y2="860.773"/><line style="stroke:#00000000;stroke-width:1.0;" x1="302" x2="302" y1="779.2886" y2="860.773"/><line style="stroke:#00000000;stroke-width:1.0;" x1="512" x2="512" y1="779.2886" y2="860.773"/><!--MD5=[58c8f6c11d5c8847664daeb4712cffbe]
@startuml
' C4-PlantUML

'Version
' ##################################
!function C4Version()
!return "2.5.0beta1"
!end function

!procedure C4VersionDetails()
rectangle C4VersionDetailsArea <<legendArea>> [
    | PlantUML | **%version()** |
    | C4-PlantUML | **C4Version()** |
    ]
    !end procedure

    ' Colors
    ' ##################################

    !global $ELEMENT_FONT_COLOR = "#FFFFFF"

    !global $ARROW_COLOR = "#666666"

    !global $BOUNDARY_COLOR = "#444444"
    !global $BOUNDARY_BG_COLOR = "transparent"

    !global $LEGEND_FONT_COLOR = "#FFFFFF"
    !global $LEGEND_TITLE_COLOR = "#000000"
    ' %darken(darkkhaki,50), #khaki
    !global $LEGEND_DARK_COLOR = "#66622E"
    !global $LEGEND_LIGHT_COLOR = "#khaki"

    !global $SKETCH_BG_COLOR = "#EEEBDC"
    !global $SKETCH_FONT_COLOR = ""
    !global $SKETCH_WARNING_COLOR = "red"
    !global $SKETCH_FONT_NAME = "Comic Sans MS"

    ' Labels
    ' ##################################

    !global $LEGEND_SHADOW_TEXT = "(shadow) "
    !global $LEGEND_NO_SHADOW_TEXT = "(no shadow) "
    !global $LEGEND_NO_FONT_BG_TEXT = "(no text, no back color) "
    !global $LEGEND_NO_FONT_TEXT = "(no text color) "
    !global $LEGEND_NO_BG_TEXT = "(no back color) "
    !global $LEGEND_NO_LINE_TEXT = "(no line color) "
    !global $LEGEND_ROUNDED_BOX = "(rounded box) "
    !global $LEGEND_EIGHT_SIDED = "(eight sided) "
    !global $LEGEND_DOTTED_LINE = "(dotted) "
    !global $LEGEND_DASHED_LINE = "(dashed) "
    !global $LEGEND_BOLD_LINE = "(bold) "

    !global $SKETCH_FOOTER_WARNING = "Warning:"
    !global $SKETCH_FOOTER_TEXT = "Created for discussion, needs to be validated"

    ' Styling
    ' ##################################

    !global $TECHN_FONT_SIZE = 12
    !global $ROUNDED_BOX_SIZE = 25
    !global $EIGHT_SIDED_SIZE = 18

    !global $ROUNDED_BOX = "roundedBox"
    !global $EIGHT_SIDED = "eightSided"

    !global $DOTTED_LINE = "dotted"
    !global $DASHED_LINE = "dashed"
    !global $BOLD_LINE = "bold"

    skinparam defaultTextAlignment center

    skinparam wrapWidth 200
    skinparam maxMessageSize 150

    skinparam LegendBorderColor transparent
    skinparam LegendBackgroundColor transparent
    skinparam LegendFontColor $LEGEND_FONT_COLOR

    skinparam shadowing<<legendArea>> false
    ' #00000000 is transparent
    skinparam rectangle<<legendArea>> {
    backgroundcolor #00000000
    bordercolor #00000000
    }

    skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam database {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam queue {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam arrow {
    Color $ARROW_COLOR
    FontColor $ARROW_COLOR
    FontSize 12
    }

    skinparam actor {
    StereotypeFontSize 12
    shadowing false
    style awesome
    }

    skinparam person {
    StereotypeFontSize 12
    shadowing false
    }

    ' Some boundary skinparams have to be set as package skinparams too (PlantUML uses internal packages)
    skinparam package {
    StereotypeFontSize 6
    StereotypeFontColor $BOUNDARY_BG_COLOR
    FontStyle plain
    BackgroundColor $BOUNDARY_BG_COLOR
    }

    skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 6
    StereotypeFontColor $BOUNDARY_BG_COLOR
    FontColor $BOUNDARY_COLOR
    BorderColor $BOUNDARY_COLOR
    BackgroundColor $BOUNDARY_BG_COLOR
    BorderStyle dashed
    }

    ' Legend and Tags
    ' ##################################
    !global $tagDefaultLegend = ""
    !global $tagCustomLegend = ""

    ' rel specific
    !unquoted function $toStereos($tags)
    !if (%strlen($tags) == 0)
    !return ''
    !endif
    !$stereos = ''
    !$brPos = %strpos($tags, "+")
    !while ($brPos >= 0)
    !$tag = %substr($tags, 0, $brPos)
    !$stereos = $stereos + '<<' + $tag + '>>'
    %set_variable_value("$" + $tag + "_LineLegend", %true())
    !$tags = %substr($tags, $brPos+1)
    !$brPos = %strpos($tags, "+")
    !endwhile
    !if (%strlen($tags) > 0)
    !$stereos = $stereos + '<<' + $tags + '>>'
    %set_variable_value("$" + $tags + "_LineLegend", %true())
    !endif
    !return $stereos
    !endfunction

    ' if $sprite/$techn is an empty argument, try to calculate it via the defined $tag
    !unquoted function $toRelArg($arg, $tags, $varPostfix)
    !if ($arg > "")
    !return $arg
    !endif

    !if (%strlen($tags) == 0)
    !return $arg
    !endif
    !$brPos = %strpos($tags, "+")
    !while ($brPos >= 0)
    !$tag = %substr($tags, 0, $brPos)
    !$newArg = %get_variable_value("$" + $tag + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !endif
    !$tags = %substr($tags, $brPos+1)
    !$brPos = %strpos($tags, "+")
    !endwhile
    !if (%strlen($tags) > 0)
    !$newArg = %get_variable_value("$" + $tags + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !endif
    !endif
    !return $arg
    !endfunction

    ' element specific (unused are hidden based on mask)
    !unquoted function $toStereos($elementType, $tags)
    !if (%strlen($tags) == 0)
    !$stereos = '<<' + $elementType + '>>'
    %set_variable_value("$" + $elementType + "Legend", %true())
    !return $stereos
    !endif
    !$stereos = ''
    !$mask = $resetMask()
    !$brPos = %strpos($tags, "+")
    !while ($brPos >= 0)
    !$tag = %substr($tags, 0, $brPos)
    !$stereos = $stereos + '<<' + $tag + '>>'
    !$mergedMask = $combineMaskWithTag($mask, $tag)
    !if ($mergedMask != $mask)
    %set_variable_value("$" + $tag + "Legend", %true())
    !$mask = $mergedMask
    !endif
    !$tags = %substr($tags, $brPos+1)
    !$brPos = %strpos($tags, "+")
    !endwhile
    !if (%strlen($tags) > 0)
    !$stereos = $stereos + '<<' + $tags + '>>'
    !$mergedMask = $combineMaskWithTag($mask, $tags)
    !if ($mergedMask != $mask)
    %set_variable_value("$" + $tags + "Legend", %true())
    !$mask = $mergedMask
    !endif
    !endif
    ' has to be last, otherwise PlantUML overwrites all tag specific skinparams
    !$stereos = $stereos + '<<' + $elementType + '>>'
    !$mergedMask = $combineMaskWithTag($mask, $elementType)
    !if ($mergedMask != $mask)
    %set_variable_value("$" + $elementType + "Legend", %true())
    !$mask = $mergedMask
    !endif
    !return $stereos
    !endfunction

    ' if $sprite/$techn is an empty argument, try to calculate it via the defined $tag
    !unquoted function $toElementArg($arg, $tags, $varPostfix, $elementType)
    !if ($arg > "")
    !return $arg
    !endif

    !if (%strlen($tags) == 0)
    !$newArg = %get_variable_value("$" + $elementType + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !else
    !return $arg
    !endif
    !endif
    !$brPos = %strpos($tags, "+")
    !while ($brPos >= 0)
    !$tag = %substr($tags, 0, $brPos)
    !$newArg = %get_variable_value("$" + $tag + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !endif
    !$tags = %substr($tags, $brPos+1)
    !$brPos = %strpos($tags, "+")
    !endwhile
    !if (%strlen($tags) > 0)
    !$newArg = %get_variable_value("$" + $tags + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !endif
    !$newArg = %get_variable_value("$" + $elementType + $varPostfix)
    !if ($newArg > "")
    !return $newArg
    !endif
    !endif
    !return $arg
    !endfunction

    !function $elementTagSkinparams($element, $tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape)
    !$elementSkin = "skinparam " + $element + "<<" + $tagStereo + ">> {" + %newline()
    !if ($fontColor != "")
    !if ($tagStereo != "boundary")
    !$elementSkin = $elementSkin + "    StereotypeFontColor " + $fontColor + %newline()
    !endif
    !$elementSkin = $elementSkin + "    FontColor " + $fontColor + %newline()
    !endif
    !if ($bgColor != "")
    !$elementSkin = $elementSkin + "    BackgroundColor " + $bgColor + %newline()
    !endif
    !if ($borderColor != "")
    !$elementSkin = $elementSkin + "    BorderColor " + $borderColor+ %newline()
    !endif
    !if ($shadowing == "true")
    !$elementSkin = $elementSkin + "    Shadowing<<" + $tagStereo + ">> " + "true" + %newline()
    !endif
    !if ($shadowing == "false")
    !$elementSkin = $elementSkin + "    Shadowing<<" + $tagStereo + ">> " + "false" + %newline()
    !endif
    ' only rectangle supports shape(d corners), define both skinparam that overlays are working
    !if ($shape != "" && $element == "rectangle")
    !if ($shape == $ROUNDED_BOX)
    !$elementSkin = $elementSkin + "    RoundCorner " + $ROUNDED_BOX_SIZE+ %newline()
    !$elementSkin = $elementSkin + "    DiagonalCorner " + "0" + %newline()
    !elseif ($shape == $EIGHT_SIDED)
    !$elementSkin = $elementSkin + "    RoundCorner " + "0" + %newline()
    !$elementSkin = $elementSkin + "    DiagonalCorner " + $EIGHT_SIDED_SIZE+ %newline()
    !endif
    !endif
    !$elementSkin = $elementSkin + "}" + %newline()
    !return $elementSkin
    !endfunction

    !unquoted procedure $defineSkinparams($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape)
    ' only rectangle supports shape(d corners)
    !$tagSkin = $elementTagSkinparams("rectangle", $tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape)
    !$tagSkin = $tagSkin + $elementTagSkinparams("database", $tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, "")
    !$tagSkin = $tagSkin + $elementTagSkinparams("queue", $tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, "")
    ' actor has style awesome, therefore $fontColor is ignored and text uses $bgColor too
    !$tagSkin = $tagSkin + $elementTagSkinparams("actor", $tagStereo, $bgColor, $bgColor, $borderColor, $shadowing, "")
    !$tagSkin = $tagSkin + $elementTagSkinparams("person", $tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, "")
    !if ($tagStereo == "boundary" && $bgColor != "")
    !$tagSkin = $tagSkin + "skinparam package<<boundary>>StereotypeFontColor " + $bgColor + %newline()
    !$tagSkin = $tagSkin + "skinparam rectangle<<boundary>>StereotypeFontColor " + $bgColor + %newline()
    !endif
    $tagSkin
    !endprocedure

    ' arrow colors cannot start with # (legend background has to start with #)
    !function $colorWithoutHash($c)
    !if (%substr($c, 0, 1) == "#")
    !$c = %substr($c,1)
    !endif
    !return $c
    !endfunction

    !unquoted procedure $defineRelSkinparams($tagStereo, $textColor, $lineColor, $lineStyle)
    !$elementSkin = "skinparam arrow<<" + $tagStereo + ">> {" + %newline()
    !$elementSkin = $elementSkin + "    Color "
    !if ($lineColor != "")
    !$elementSkin = $elementSkin + $colorWithoutHash($lineColor)
    !endif
    !if ($textColor != "")
    !$elementSkin = $elementSkin + ";text:" + $colorWithoutHash($textColor)
    !endif
    !if ($lineStyle != "")
    !$elementSkin = $elementSkin + ";line." + $lineStyle
    !endif
    !$elementSkin = $elementSkin + %newline()
    !$elementSkin = $elementSkin + "}" + %newline()
    $elementSkin
    !endprocedure

    ' %is_dark() requires PlantUML version >= 1.2021.6
    !if (%function_exists("%is_dark"))
    !$PlantUMLSupportsDynamicLegendColor = %true()
    !else
    !$PlantUMLSupportsDynamicLegendColor = %false()
    !log "dynamic undefined legend colors" requires PlantUML version >= 1.2021.6, therefore only static assigned colors are used
    !endif

    !unquoted function $contrastLegend($color)
    !if (%is_dark($color))
    !$value = $LEGEND_LIGHT_COLOR
    !else
    !$value = $LEGEND_DARK_COLOR
    !endif
    !return $value
    !endfunction

    !unquoted function $flatLegend($color)
    !if (%is_dark($color))
    !$value = $LEGEND_DARK_COLOR
    !else
    !$value = $LEGEND_LIGHT_COLOR
    !endif
    !return $value
    !endfunction

    ' legend background has to start with #
    !function $colorWithHash($c)
    !if (%substr($c, 0, 1) != "#")
    !$c = "#" + $c
    !endif
    !return $c
    !endfunction

    !function $addMaskFlag($mask, $attr)
    !if ($attr == "")
    !$mask = $mask + "0"
    !else
    !$mask = $mask + "1"
    !endif
    !return $mask
    !endfunction

    !function $orFlags($flag1, $flag2)
    !if ($flag1 == "0" && $flag2 == "0")
    !return "0"
    !endif
    !return "1"
    !endfunction

    !function $tagLegendMask($bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite)
    !$mask = ""
    !$mask = $addMaskFlag($mask, $bgColor)
    !$mask = $addMaskFlag($mask, $fontColor)
    !$mask = $addMaskFlag($mask, $borderColor)
    !$mask = $addMaskFlag($mask, $shadowing)
    !$mask = $addMaskFlag($mask, $shape)
    !$mask = $addMaskFlag($mask, $sprite)
    !return $mask
    !endfunction

    !function $resetMask()
    !return "000000"
    !endfunction

    !function $combineMasks($mask1, $mask2)
    !$mask = ""
    !$mask = $mask + $orFlags(%substr($mask1, 0, 1), %substr($mask2, 0, 1))
    !$mask = $mask + $orFlags(%substr($mask1, 1, 1), %substr($mask2, 1, 1))
    !$mask = $mask + $orFlags(%substr($mask1, 2, 1), %substr($mask2, 2, 1))
    !$mask = $mask + $orFlags(%substr($mask1, 3, 1), %substr($mask2, 3, 1))
    !$mask = $mask + $orFlags(%substr($mask1, 4, 1), %substr($mask2, 4, 1))
    !$mask = $mask + $orFlags(%substr($mask1, 5, 1), %substr($mask2, 5, 1))
    !return $mask
    !endfunction

    !function $combineMaskWithTag($mask1, $tag)
    !$mask2 = %get_variable_value("$" + $tag+ "LegendMask")
    !if ($mask2 == "")
    ' !log combineMaskWithTag $mask1, $tag, ... only $mask1
    !return $mask1
    !endif

    ' !log combineMaskWithTag $mask1, $tag, $mask2 ... $combineMasks($mask1, $mask2)
    !return  $combineMasks($mask1, $mask2)
    !endfunction

    ' element symbols typically 4 times too big in legend
    !function $smallVersionSprite($sprite)
    ' ,scale= ... has to be first (...,color=black,scale=0.25... is invalid too)
    !if (%strpos($sprite, "=") < 0)
    !if (%substr($sprite, 0, 4) == "img:")
    !$smallSprite = $sprite + "{scale=0.25}"
    !else
    !$smallSprite = $sprite + ",scale=0.25"
    !endif
    !else
    !$smallSprite = $sprite
    !endif
    !return $smallSprite
    !endfunction

    ' format sprite that it can be used in diagram
    !function $getSprite($sprite)
    ' if it starts with & it's a OpenIconic, details see https://useiconic.com/open/
    ' if it starts with img: it's an image, details see https://plantuml.com/creole
    !if (%substr($sprite, 0, 1) != "&" && %substr($sprite, 0, 4) != "img:")
    !$formatted = "<$" + $sprite + ">"
    !else
    !$formatted = "<" + $sprite + ">"
    !endif
    !return $formatted
    !endfunction

    !function $tagLegendEntry($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $legendText, $legendSprite)
    !$bg = $bgColor
    !$fo = $fontColor
    !$bo = $borderColor

    !if ($fo == "")
    !if ($bg != "")
    !if ($PlantUMLSupportsDynamicLegendColor)
    !$fo = $contrastLegend($bg)
    !else
    !$fo = $LEGEND_DARK_COLOR
    !endif
    !else
    !if ($bo == "")
    !$fo = $LEGEND_DARK_COLOR
    !$bg = $LEGEND_LIGHT_COLOR
    !else
    !if ($PlantUMLSupportsDynamicLegendColor)
    !$fo = $flatLegend($bo)
    !$bg = $contrastLegend($bo)
    !else
    !$fo = $LEGEND_DARK_COLOR
    !$bg = $LEGEND_LIGHT_COLOR
    !endif
    !endif
    !endif
    !else
    !if ($bg == "")
    !if ($PlantUMLSupportsDynamicLegendColor)
    !$bg = $contrastLegend($fo)
    !else
    !$bg = $LEGEND_LIGHT_COLOR
    !endif
    !endif
    !endif

    !if ($bo == "")
    !$bo = $bg
    !endif

    !$tagEntry = "|"
    !$tagEntry = $tagEntry + "<" + $colorWithHash($bg) +">"
    ' <U+25AF> ..white rectangle
    !$tagEntry = $tagEntry + "<color:"+$bo+"> <U+25AF></color> "
    !$tagEntry = $tagEntry + "<color:"+$fo+">"
    !if ($legendSprite != "")
    !$tagEntry = $tagEntry + $getSprite($legendSprite) + " "
    !endif
    !if ($legendText == "")
    !$tagEntry = $tagEntry + " " + $tagStereo + " "
    !if ($shadowing == "true")
    !$tagEntry = $tagEntry + $LEGEND_SHADOW_TEXT
    !endif
    !if ($shadowing == "false")
    !$tagEntry = $tagEntry + $LEGEND_NO_SHADOW_TEXT
    !endif
    !if ($shape == $ROUNDED_BOX)
    !$tagEntry = $tagEntry + $LEGEND_ROUNDED_BOX
    !endif
    !if ($shape == $EIGHT_SIDED)
    !$tagEntry = $tagEntry + $LEGEND_EIGHT_SIDED
    !endif
    !if ($fontColor == "" && $bgColor == "")
    !$tagEntry = $tagEntry + $LEGEND_NO_FONT_BG_TEXT
    !else
    !if ($fontColor == "")
    !$tagEntry = $tagEntry + $LEGEND_NO_FONT_TEXT
    !endif
    !if ($bgColor == "")
    !$tagEntry = $tagEntry + $LEGEND_NO_BG_TEXT
    !endif
    !endif
    !else
    !$tagEntry = $tagEntry + " " + $legendText + " "
    !endif

    !$tagEntry = $tagEntry + "</color> "
    !$tagEntry = $tagEntry + "|"
    !return $tagEntry
    !endfunction

    !function $tagRelLegendEntry($tagStereo, $textColor, $lineColor, $lineStyle, $legendText, $legendSprite)
    !$tc = $textColor
    !$lc = $lineColor

    !if ($tc == "")
    !if ($PlantUMLSupportsDynamicLegendColor)
    !$tc = $flatLegend($ARROW_COLOR)
    !else
    !$tc = $LEGEND_DARK_COLOR
    !endif
    !endif
    !if ($lc == "")
    !if ($PlantUMLSupportsDynamicLegendColor)
    !$lc = $flatLegend($ARROW_COLOR)
    !else
    !$lc = $LEGEND_DARK_COLOR
    !endif
    !endif

    !$tagEntry = "|"
    ' <U+2500> ..white line
    !$tagEntry = $tagEntry + "<color:"+$lc+"> <U+2500></color> "
    !$tagEntry = $tagEntry + "<color:"+$tc+">"
    !if ($legendSprite != "")
    !$tagEntry = $tagEntry + $getSprite($legendSprite) + " "
    !endif
    !if ($legendText == "")
    !$tagEntry = $tagEntry + " " + $tagStereo + " "
    !if ($textColor == "")
    !$tagEntry = $tagEntry + $LEGEND_NO_FONT_TEXT
    !endif
    !if ($lineColor == "")
    !$tagEntry = $tagEntry + $LEGEND_NO_LINE_TEXT
    !endif
    !if ($lineStyle != "")
    !if ($lineStyle == $DOTTED_LINE)
    !$tagEntry = $tagEntry + $LEGEND_DOTTED_LINE
    !elseif ($lineStyle == $DASHED_LINE)
    !$tagEntry = $tagEntry + $LEGEND_DASHED_LINE
    !elseif ($lineStyle == $BOLD_LINE)
    !$tagEntry = $tagEntry + $LEGEND_BOLD_LINE
    !else
    !$tagEntry = $tagEntry + "(" + $lineStyle + ") "
    !endif
    !endif
    !else
    !$tagEntry = $tagEntry + " " + $legendText + " "
    !endif

    !$tagEntry = $tagEntry + "</color> "
    !$tagEntry = $tagEntry + "|"
    !return $tagEntry
    !endfunction

    !global $LEGEND_DOTTED_LINE = "(dotted) "
    !global $LEGEND_DASHED_LINE = "(dashed) "
    !global $LEGEND_BOLD_LINE = "(bold) "

    !unquoted procedure $addTagToLegend($tagStereo, $bgColor="", $fontColor="", $borderColor="", $shadowing="", $shape="", $legendText="", $legendSprite="")
    '' if a combined element tag is defined (e.g. "v1.0&v1.1") then it is typically a merged color,
    '' like a new $fontColor="#fdae61" therefore it should be added to the legend
    '' and the & combined tags will be not removed
    '  !if (%strpos($tagStereo, "&") < 0)
    !$tagEntry = $tagLegendEntry($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $legendText, $legendSprite)
    %set_variable_value("$" + $tagStereo + "LegendEntry", $tagEntry)
    !$tagCustomLegend = $tagCustomLegend + $tagStereo + "\n"
    !$tagMask = $tagLegendMask( $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite)
    %set_variable_value("$" + $tagStereo + "LegendMask", $tagMask)
    '  !endif
    !endprocedure

    !unquoted procedure $addRelTagToLegend($tagStereo, $textColor="", $lineColor="", $lineStyle="", $legendText="", $legendSprite="")
    '' Arrows have a bug with stereotype/skinparams and cannot combine text colors of one stereotype
    '' and the line color of another stereotype. Therefore the text color of one tag and the line color
    '' of another tag have to be combined via a "workaround" tag ("v1.0&v1.1").
    '' This workaround tag could be theoretically removed in the legend but after that there would
    '' be an inconsistency between the element tags and the rel tags and therefore
    '' & combined workaround tags are not removed too (and in unlikely cases the color itself could be changed)
    '  !if (%strpos($tagStereo, "&") < 0)
    !$tagEntry = $tagRelLegendEntry($tagStereo, $textColor, $lineColor, $lineStyle, $legendText, $legendSprite)
    %set_variable_value("$" + $tagStereo + "_LineLegendEntry", $tagEntry)
    !$tagCustomLegend = $tagCustomLegend + $tagStereo + "_Line\n"
    '  !endif
    !endprocedure

    !procedure $showActiveLegendEntries($allDefined)
    !$brPos = %strpos($allDefined, "\n")
    !while ($brPos >= 0)
    !$tagStereo = %substr($allDefined, 0, $brPos)
    !$allDefined = %substr($allDefined, $brPos+2)
    !$brPos = %strpos($allDefined, "\n")
    !if (%variable_exists("$" + $tagStereo + "Legend"))
    %get_variable_value("$" + $tagStereo + "LegendEntry")
    !endif
    !endwhile
    !if (%strlen($allDefined) > 0)
    !$tagStereo = $allDefined
    !if (%variable_exists("$" + $tagStereo + "Legend"))
    %get_variable_value("$" + $tagStereo + "LegendEntry")
    !endif
    !endif
    !endprocedure

    !function RoundedBoxShape()
    !return $ROUNDED_BOX
    !endfunction

    !function EightSidedShape()
    !return $EIGHT_SIDED
    !endfunction

    !function DottedLine()
    !return $DOTTED_LINE
    !endfunction

    !function DashedLine()
    !return $DASHED_LINE
    !endfunction

    !function BoldLine()
    !return $BOLD_LINE
    !endfunction

    ' used by new defined tags
    !unquoted procedure AddElementTag($tagStereo, $bgColor="", $fontColor="", $borderColor="", $shadowing="", $shape="", $sprite="", $techn="", $legendText="", $legendSprite="")
    $defineSkinparams($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape)
    !if ($sprite!="")
    %set_variable_value("$" + $tagStereo + "ElementTagSprite", $sprite)
    !if ($legendSprite == "")
    !$legendSprite = $smallVersionSprite($sprite)
    !endif
    !endif
    !if ($techn != "")
    %set_variable_value("$" + $tagStereo + "ElementTagTechn", $techn)
    !endif
    $addTagToLegend($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $legendText, $legendSprite)
    !endprocedure

    ' used by new defined rel tags
    !unquoted procedure AddRelTag($tagStereo, $textColor="", $lineColor="", $lineStyle = "", $sprite="", $techn="", $legendText="", $legendSprite="")
    $defineRelSkinparams($tagStereo, $textColor, $lineColor, $lineStyle)
    !if ($sprite != "")
    %set_variable_value("$" + $tagStereo + "RelTagSprite", $sprite)
    !if ($legendSprite == "")
    ' relation symbols typically 1:1 no additional scale required
    !$legendSprite = $sprite
    !endif
    !endif
    !if ($techn != "")
    %set_variable_value("$" + $tagStereo + "RelTagTechn", $techn)
    !endif
    $addRelTagToLegend($tagStereo, $textColor, $lineColor, $lineStyle, $legendText, $legendSprite)
    !endprocedure

    ' update the style of existing elements like person, ...
    !unquoted procedure UpdateElementStyle($elementName, $bgColor="", $fontColor="", $borderColor="", $shadowing="", $shape="", $sprite="", $techn="", $legendText="", $legendSprite="")
    $defineSkinparams($elementName, $bgColor, $fontColor, $borderColor, $shadowing, $shape)
    !if ($sprite != "")
    %set_variable_value("$" + $elementName + "ElementTagSprite", $sprite)
    !if ($legendSprite == "")
    !$legendSprite = $smallVersionSprite($sprite)
    !endif
    !endif
    !if ($techn != "")
    %set_variable_value("$" + $elementName + "ElementTagTechn", $techn)
    !endif
    !$tagEntry = $tagLegendEntry($elementName, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $legendText, $legendSprite)
    %set_variable_value("$" + $elementName + "LegendEntry", $tagEntry)
    ' default tags sets at least bgColor and fontColor
    !$tagMask = $tagLegendMask("CHANGED", "CHANGED", $borderColor, $shadowing, $shape, $sprite)
    %set_variable_value("$" + $elementName + "LegendMask", $tagMask)
    !endprocedure

    /' @deprecated in favor of UpdateElementStyle '/
        !unquoted procedure UpdateSkinparamsAndLegendEntry($elementName, $bgColor="", $fontColor="", $borderColor="", $shadowing="")
        UpdateElementStyle($elementName, $bgColor, $fontColor, $borderColor, $shadowing)
        !endprocedure

        ' update the style of default relation, it has to set both properties (combined statement not working)
        !unquoted procedure UpdateRelStyle($textColor, $lineColor)
        !$elementSkin = "skinparam arrow {" + %newline()
        !$elementSkin = $elementSkin + "    Color " + $lineColor + %newline()
        !$elementSkin = $elementSkin + "    FontColor " + $textColor + %newline()
        !$elementSkin = $elementSkin + "}" + %newline()
        $elementSkin
        !endprocedure

        ' tags/stereotypes have to be delimited with \n
        !unquoted procedure SetDefaultLegendEntries($tagStereoEntries)
        !$tagDefaultLegend = $tagStereoEntries
        !endprocedure

        ' Links
        ' ##################################

        !function $getLink($link)
        !if ($link != "")
        !return "[[" + $link + "]]"
        !else
        !return ""
        !endif
        !endfunction

        ' Line breaks
        ' ##################################

        ' PlantUML supports no DETERMINISTIC/automatic line breaks of "PlantUML line" (C4 Relashionships)
        ' therefore Rel...() implements an automatic line break based on spaces (like in all other objects).
        ' If a $type contains \n then these are used (and no automatic space based line breaks are done)
        ' $REL_TECHN_MAX_CHAR_WIDTH defines the automatic line break position
        !global $REL_TECHN_MAX_CHAR_WIDTH = 35
        !global $REL_DESCR_MAX_CHAR_WIDTH = 32

        !unquoted function $breakDescr($descr, $widthStr)
        !$width = %intval($widthStr)
        !$multiLine = ""
        !if (%strpos($descr, "\n") >= 0)
        !else
        !while (%strlen($descr) > $width)
        !$brPos = $width
        !while ($brPos > 0 && %substr($descr, $brPos, 1) != ' ')
        !$brPos = $brPos - 1
        !endwhile

        !if ($brPos < 1)
        !$brPos = %strpos($descr, " ")
        !else
        !endif

        !if ($brPos > 0)
        !$multiLine = $multiLine + %substr($descr, 0, $brPos) + "\n"
        !$descr = %substr($descr, $brPos + 1)
        !else
        !$multiLine = $multiLine+ $descr
        !$descr = ""
        !endif
        !endwhile
        !endif
        !if (%strlen($descr) > 0)
        !$multiLine = $multiLine + $descr
        !endif
        !return $multiLine
        !endfunction

        ' $breakTechn() supports //...//; $breakNode() in C4_Deployment supports no //....//
        !unquoted function $breakTechn($techn, $widthStr)
        !$width = %intval($widthStr)
        !$multiLine = ""
        !if (%strpos($techn, "\n") >= 0)
        !while (%strpos($techn, "\n") >= 0)
        !$brPos = %strpos($techn, "\n")
        !$multiLine = $multiLine + %substr($techn, 0, $brPos) + '</size>//\n//<size:'+$TECHN_FONT_SIZE+'>'
    !$techn = %substr($techn, $brPos+2)
    !endwhile
    !else
    !while (%strlen($techn) > $width)
    !$brPos = $width
    !while ($brPos > 0 && %substr($techn, $brPos, 1) != ' ')
    !$brPos = $brPos - 1
    !endwhile

    !if ($brPos < 1)
    !$brPos = %strpos($techn, " ")
    !else
    !endif

    !if ($brPos > 0)
    !$multiLine = $multiLine + %substr($techn, 0, $brPos) + '</size>//\n//<size:'+$TECHN_FONT_SIZE+'>'
    !$techn = %substr($techn, $brPos + 1)
    !else
    !$multiLine = $multiLine+ $techn
    !$techn = ""
    !endif
    !endwhile
    !endif
    !if (%strlen($techn) > 0)
    !$multiLine = $multiLine + $techn
    !endif
    !return $multiLine
    !endfunction

    ' Element properties
    ' ##################################

    ' collect all defined properties as table rows
    !global $propTable = ""
    !global $propTableCaption = ""
    !global $propColCaption = "="

    !unquoted function SetPropertyHeader($col1Name, $col2Name, $col3Name = "", $col4Name = "")
    !$propColCaption = ""
    !$propTableCaption = "|= " + $col1Name + " |= " + $col2Name + " |"
    !if ($col3Name != "")
    !$propTableCaption = $propTableCaption + "= " + $col3Name + " |"
    !endif
    !if ($col4Name != "")
    !$propTableCaption = $propTableCaption + "= " + $col4Name + " |"
    !endif
    !return ""
    !endfunction

    !unquoted function WithoutPropertyHeader()
    !$propTableCaption = ""
    !$propColCaption = "="
    !return ""
    !endfunction

    !unquoted function AddProperty($col1, $col2, $col3 = "", $col4 = "")
    !if ($propTable == "")
    !if ($propTableCaption != "")
    !$propTable = $propTableCaption + "\n"
    !endif
    !else
    !$propTable = $propTable + "\n"
    !endif
    !$propTable = $propTable + "| " + $col1 + " |" + $propColCaption + " " + $col2 + " |"
    !if ($col3 != "")
    !$propTable = $propTable + " " + $col3 + " |"
    !endif
    !if ($col4 != "")
    !$propTable = $propTable + " " + $col4 + " |"
    !endif
    !return ""
    !endfunction

    !unquoted function $getProps($alignedNL = "\n")
    !if ($propTable != "")
    !$retTable = $alignedNL + $propTable
    !$propTable = ""
    !return $retTable
    !endif
    !return ""
    !endfunction

    !unquoted function $getProps_L()
    !return $getProps("\l")
    !endfunction

    !unquoted function $getProps_R()
    !return $getProps("\r")
    !endfunction

    SetPropertyHeader("Property","Value")

    ' Layout
    ' ##################################

    !procedure $getHideStereotype($hideStereotype)
    !if ($hideStereotype == "true")
    hide stereotype
    !endif
    !endprocedure

    !procedure $getLegendTable()
    <#00000000,#00000000>|<color:$LEGEND_TITLE_COLOR>**Legend**</color> |
    $showActiveLegendEntries($tagDefaultLegend)
    $showActiveLegendEntries($tagCustomLegend)
    !endprocedure

    !procedure $getLegendArea($areaAlias, $hideStereotype)
    $getHideStereotype($hideStereotype)
    rectangle $areaAlias<<legendArea>> [
    $getLegendTable()
    ]
    !endprocedure

    !procedure HIDE_STEREOTYPE()
    hide stereotype
    !endprocedure

    !unquoted procedure SET_SKETCH_STYLE($bgColor="_dont_change_", $fontColor="_dont_change_", $warningColor="_dont_change_", $fontName="_dont_change_", $footerWarning="_dont_change_", $footerText="_dont_change_")
    !if $bgColor != "_dont_change_"
    !global $SKETCH_BG_COLOR = $bgColor
    !endif
    !if $fontColor != "_dont_change_"
    !global $SKETCH_FONT_COLOR = $fontColor
    !endif
    !if $warningColor != "_dont_change_"
    !global $SKETCH_WARNING_COLOR = $warningColor
    !endif
    !if $fontName != "_dont_change_"
    !global $SKETCH_FONT_NAME = $fontName
    !endif
    !if $footerWarning != "_dont_change_"
    !global $SKETCH_FOOTER_WARNING = $footerWarning
    !endif
    !if $footerText != "_dont_change_"
    !global $SKETCH_FOOTER_TEXT = $footerText
    !endif
    !endprocedure

    !procedure LAYOUT_AS_SKETCH()
    skinparam handwritten true
    !if $SKETCH_BG_COLOR > ""
    skinparam backgroundColor $SKETCH_BG_COLOR
    !endif
    !if $SKETCH_FONT_COLOR > ""
    skinparam footer {
    FontColor $SKETCH_FONT_COLOR
    }
    !if $ARROW_COLOR == "#666666"
    !global $ARROW_COLOR = $SKETCH_FONT_COLOR
    skinparam arrow {
    Color $ARROW_COLOR
    FontColor $ARROW_COLOR
    }
    !endif
    !if $BOUNDARY_COLOR == "#444444"
    !global $BOUNDARY_COLOR = $SKETCH_FONT_COLOR
    skinparam rectangle<<boundary>> {
    FontColor $BOUNDARY_COLOR
    BorderColor $BOUNDARY_COLOR
    }
    !endif
    !endif
    !if $SKETCH_FONT_NAMES > ""
    skinparam defaultFontName $SKETCH_FONT_NAME
    !endif
    !if $SKETCH_FOOTER_WARNING > "" || $SKETCH_FOOTER_TEXT > ""
    !$line = "footer <font color=" + $SKETCH_WARNING_COLOR + ">"+ $SKETCH_FOOTER_WARNING + "</font> " + $SKETCH_FOOTER_TEXT
    $line
    !endif
    !endprocedure

    !global $fix_direction=%false()

    !function $down($start,$end)
    !if ($fix_direction)
    !return $start+"RIGHT"+$end
    !else
    !return $start+"DOWN"+$end
    !endif
    !endfunction

    !function $up($start,$end)
    !if ($fix_direction)
    !return $start+"LEFT"+$end
    !else
    !return $start+"UP"+$end
    !endif
    !endfunction

    !function $left($start,$end)
    !if ($fix_direction)
    !return $start+"UP"+$end
    !else
    !return $start+"LEFT"+$end
    !endif
    !endfunction

    !function $right($start,$end)
    !if ($fix_direction)
    !return $start+"DOWN"+$end
    !else
    !return $start+"RIGHT"+$end
    !endif
    !endfunction

    !procedure LAYOUT_TOP_DOWN()
    !global $fix_direction=%false()
    top to bottom direction
    !endprocedure

    !procedure LAYOUT_LEFT_RIGHT()
    !global $fix_direction = %false()
    left to right direction
    !endprocedure

    !procedure LAYOUT_LANDSCAPE()
    !global $fix_direction = %true()
    left to right direction
    !endprocedure

    ' has to be last call in diagram
    !unquoted procedure SHOW_LEGEND($hideStereotype="true")
    $getHideStereotype($hideStereotype)
    legend right
    $getLegendTable()
    endlegend
    !endprocedure

    /' @deprecated in favor of SHOW_LEGEND '/
    !unquoted procedure SHOW_DYNAMIC_LEGEND($hideStereotype="true")
    SHOW_LEGEND($hideStereotype)
    !endprocedure

    ' legend is reserved and cannot be uses as alias of SHOW_FLOATING_LEGEND() therefore
    ' LEGEND() is introduced. It returns the default name of the floating alias "floating_legend_alias"
    ' and can be used in the Lay_Distance() calls
    !function LEGEND()
    !return "floating_legend_alias"
    !endfunction

    ' enables that legend can be located in drawing area of the diagram. It has to be last call in diagram followed by Lay_Distance()
    !unquoted procedure SHOW_FLOATING_LEGEND($alias=LEGEND(), $hideStereotype="true")
    $getLegendArea($alias, $hideStereotype)
    !endprocedure

    ' Boundaries
    ' ##################################

    !function $getBoundary($label, $type)
    !if ($type == "")
    !return '==' + $label
    !endif
    !if (type != "")
    !return '==' + $label + '\n<size:' + $TECHN_FONT_SIZE + '>[' + $type + ']</size>'
    !endif
    !endfunction

    !unquoted procedure Boundary($alias, $label, $type="", $tags="", $link="")
    rectangle "$getBoundary($label, $type)" $toStereos("boundary", $tags) as $alias $getLink($link)
    !endprocedure

    ' Relationship
    ' ##################################

    !function $getRel($direction, $alias1, $alias2, $label, $techn, $descr, $sprite, $tags, $link)
    !$sprite = $toRelArg($sprite, $tags, "RelTagSprite")
    !$techn = $toRelArg($techn, $tags, "RelTagTechn")
    !$rel = $alias1 + ' ' + $direction + ' ' + $alias2
    !if ($tags != "")
    !$rel = $rel + ' ' + $toStereos($tags)
    !endif
    !$rel = $rel + ' : '
    !if ($sprite != "")
    !$rel = $rel + $getSprite($sprite) + ' '
    !endif
    !if ($link != "")
    !$rel = $rel + '**[[' + $link + ' ' + $label + ']]**'
    !else
    !$rel = $rel + '**' + $label + '**'
    !endif
    !if ($techn != "")
    ' line break is not deterministic, calculate it
    !$rel = $rel + '\n//<size:' + $TECHN_FONT_SIZE + '>[' + $breakTechn($techn, $REL_TECHN_MAX_CHAR_WIDTH) + ']</size>//'
    !endif
    !if ($descr != "")
    ' line break is not deterministic, calculate it
    !$rel = $rel + '\n\n' + $breakDescr($descr, $REL_DESCR_MAX_CHAR_WIDTH)
    !endif
    !$prop = $getProps()
    !if ($prop != "")
    ' reuse table
    !$rel = $rel + $prop
    !endif
    !return $rel
    !endfunction

    !unquoted procedure Rel_($alias1, $alias2, $label, $direction)
    $alias1 $direction $alias2 : **$label**
    !endprocedure
    !unquoted procedure Rel_($alias1, $alias2, $label, $techn, $direction)
    $alias1 $direction $alias2 : **$label**\n//<size:$TECHN_FONT_SIZE>[$techn]</size>//
    !endprocedure

    !unquoted procedure Rel($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("- ->>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("<<- ->>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_Back($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("<<- -", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_Neighbor($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("->>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel_Neighbor($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("<<->>", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_Back_Neighbor($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel("<<-", $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_D($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($down("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure Rel_Down($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($down("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel_D($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($down("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure BiRel_Down($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($down("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_U($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($up("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure Rel_Up($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($up("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel_U($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($up("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure BiRel_Up($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($up("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_L($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($left("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure Rel_Left($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($left("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel_L($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($left("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure BiRel_Left($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($left("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure Rel_R($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($right("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure Rel_Right($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($right("-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    !unquoted procedure BiRel_R($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($right("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure
    !unquoted procedure BiRel_Right($from, $to, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
    $getRel($right("<<-","->>"), $from, $to, $label, $techn, $descr, $sprite, $tags, $link)
    !endprocedure

    ' Layout Helpers
    ' ##################################

    !function $getHiddenLine($distance)
    !return '-[hidden]' + %substr('- - - - - - - - - - - -', 0, %intval($distance) + 1)
    !endfunction

    !unquoted procedure Lay_D($from, $to)
    $from -[hidden]D- $to
    !endprocedure
    !unquoted procedure Lay_Down($from, $to)
    $from -[hidden]D- $to
    !endprocedure

    !unquoted procedure Lay_U($from, $to)
    $from -[hidden]U- $to
    !endprocedure
    !unquoted procedure Lay_Up($from, $to)
    $from -[hidden]U- $to
    !endprocedure

    !unquoted procedure Lay_R($from, $to)
    $from -[hidden]R- $to
    !endprocedure
    !unquoted procedure Lay_Right($from, $to)
    $from -[hidden]R- $to
    !endprocedure

    !unquoted procedure Lay_L($from, $to)
    $from -[hidden]L- $to
    !endprocedure
    !unquoted procedure Lay_Left($from, $to)
    $from -[hidden]L- $to
    !endprocedure

    ' PlantUML bug: lines which does "not match" with the orientation/direction of the diagram
    ' uses the same length therefore the method offers no direction at all.
    ' If a direction is required the Lay_...() methods can be used
    !unquoted procedure Lay_Distance($from, $to, $distance="0")
    $from $getHiddenLine($distance) $to
    !endprocedure
' convert it with additional command line argument -DRELATIVE_INCLUDE="." to use locally
!if %variable_exists("RELATIVE_INCLUDE")
!include %get_variable_value("RELATIVE_INCLUDE")/C4.puml
!else
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4.puml
!endif

' Scope: A single software system.
' Primary elements: The software system in scope.
' Supporting elements: People and software systems directly connected to the software system in scope.
' Intended audience: Everybody, both technical and non-technical people, inside and outside of the software development team.

' Colors
' ##################################

!global $PERSON_BG_COLOR = "#08427B"
!global $PERSON_BORDER_COLOR = "#073B6F"
!global $EXTERNAL_PERSON_BG_COLOR = "#686868"
!global $EXTERNAL_PERSON_BORDER_COLOR = "#8A8A8A"
!global $SYSTEM_BG_COLOR = "#1168BD"
!global $SYSTEM_BORDER_COLOR = "#3C7FC0"
!global $EXTERNAL_SYSTEM_BG_COLOR = "#999999"
!global $EXTERNAL_SYSTEM_BORDER_COLOR = "#8A8A8A"

' Styling
' ##################################

UpdateElementStyle("person", $PERSON_BG_COLOR, $ELEMENT_FONT_COLOR, $PERSON_BORDER_COLOR)
UpdateElementStyle("external_person", $EXTERNAL_PERSON_BG_COLOR, $ELEMENT_FONT_COLOR, $EXTERNAL_PERSON_BORDER_COLOR)
UpdateElementStyle("system", $SYSTEM_BG_COLOR, $ELEMENT_FONT_COLOR, $SYSTEM_BORDER_COLOR)
UpdateElementStyle("external_system", $EXTERNAL_SYSTEM_BG_COLOR, $ELEMENT_FONT_COLOR, $EXTERNAL_SYSTEM_BORDER_COLOR)

' shortcuts with default colors
!unquoted procedure AddPersonTag($tagStereo, $bgColor=$PERSON_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$PERSON_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, "", $legendText, $legendSprite)
!endprocedure
!unquoted procedure AddExternalPersonTag($tagStereo, $bgColor=$EXTERNAL_PERSON_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$EXTERNAL_PERSON_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, "", $legendText, $legendSprite)
!endprocedure
!unquoted procedure AddSystemTag($tagStereo, $bgColor=$SYSTEM_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$SYSTEM_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, "", $legendText, $legendSprite)
!endprocedure
!unquoted procedure AddExternalSystemTag($tagStereo, $bgColor=$EXTERNAL_SYSTEM_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$EXTERNAL_SYSTEM_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, "", $legendText, $legendSprite)
!endprocedure

' Sprites
' ##################################

sprite $person [48x48/16] {
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
000000000000025788300000000005886410000000000000
000000000007DFFFFFFD9643347BFFFFFFFB400000000000
0000000004EFFFFFFFFFFFFFFFFFFFFFFFFFFB1000000000
000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFD200000000
00000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE10000000
0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB0000000
000000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5000000
000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD000000
000009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF200000
00000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF600000
00000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00000EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF700000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
0000008FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3000000
000000014555555555555555555555555555555300000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
}

sprite $person2 [48x48/16] {
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000002578888300000000005888864100000000000
0000000007DFFFFFFFFD9643347BFFFFFFFFFB4000000000
00000004EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB10000000
0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD2000000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
00003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
0000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF50000
0003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD0000
0009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
0009FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFF2000
0003FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFD0000
0000BFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFF50000
00003FFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFB00000
000006FFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFE100000
0000007FFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFD2000000
00000004EFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFB10000000
0000000007DF8FFFFFFFFFFFFFFFFFFFFFF8FB4000000000
000000000002578888888888888888888864100000000000
}

' Layout
' ##################################

SetDefaultLegendEntries("person\nsystem\nexternal_person\nexternal_system")

!procedure LAYOUT_WITH_LEGEND()
hide stereotype
legend right
|<color:$LEGEND_TITLE_COLOR>**Legend**</color> |
|<$PERSON_BG_COLOR> person |
|<$SYSTEM_BG_COLOR> system|
|<$EXTERNAL_PERSON_BG_COLOR> external person |
|<$EXTERNAL_SYSTEM_BG_COLOR> external system |
endlegend
!endprocedure

!global $defaultPersonSprite = "person"
!global $portraitPerson = "false"

!procedure HIDE_PERSON_SPRITE()
!$defaultPersonSprite = ""
!$portraitPerson = "false"
!endprocedure

!unquoted procedure SHOW_PERSON_SPRITE($sprite="")
!if ($sprite == "")
!$defaultPersonSprite = "person"
!else
!$defaultPersonSprite = $sprite
!endif
!$portraitPerson = "false"
!endprocedure

!unquoted procedure SHOW_PERSON_PORTRAIT()
!$defaultPersonSprite = ""
!$portraitPerson = "portrait"
!endprocedure

!unquoted procedure SHOW_PERSON_OUTLINE()
!$defaultPersonSprite = ""
!$portraitPerson = "outline"
!endprocedure

' Elements
' ##################################

!function $getPerson($label, $descr, $sprite)
!if ($sprite == "") && ($defaultPersonSprite != "")
!$sprite = $defaultPersonSprite
!endif
!if ($descr == "") && ($sprite == "")
!return '=='+$label
!endif
!if ($descr == "") && ($sprite != "")
!return $getSprite($sprite)+'\n=='+$label
!endif
!if ($descr != "") && ($sprite == "")
!return '=='+$label+'\n\n '+$descr
!endif
!if ($descr != "") && ($sprite != "")
!return $getSprite($sprite)+'\n=='+$label+'\n\n '+$descr
!endif
!endfunction

!function $getSystem($label, $descr, $sprite)
!if ($descr == "") && ($sprite == "")
!return '=='+$label
!endif
!if ($descr == "") && ($sprite != "")
!return $getSprite($sprite)+'\n=='+$label
!endif
!if ($descr != "") && ($sprite == "")
!return '=='+$label+'\n\n '+$descr
!endif
!if ($descr != "") && ($sprite != "")
!return $getSprite($sprite)+'\n=='+$label+'\n\n '+$descr
!endif
!endfunction

!unquoted procedure Person($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "person")
!if ($portraitPerson == "portrait") && ($sprite == "")
actor "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("person", $tags) as $alias $getLink($link)
!elseif ($portraitPerson == "outline") && ($sprite == "")
person "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("person", $tags) as $alias $getLink($link)
!else
rectangle "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("person", $tags) as $alias $getLink($link)
!endif
!endprocedure

!unquoted procedure Person_Ext($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_person")
!if ($portraitPerson == "portrait") && ($sprite == "")
actor "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("external_person", $tags) as $alias $getLink($link)
!elseif ($portraitPerson == "outline") && ($sprite == "")
person "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("external_person", $tags) as $alias $getLink($link)
!else
rectangle "$getPerson($label, $descr, $sprite)$getProps()" $toStereos("external_person", $tags) as $alias $getLink($link)
!endif
!endprocedure

!unquoted procedure System($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "system")
rectangle "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("system", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure System_Ext($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_system")
rectangle "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("external_system", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure SystemDb($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "system")
database "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("system", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure SystemQueue($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "system")
queue "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("system", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure SystemDb_Ext($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_system")
database "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("external_system", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure SystemQueue_Ext($alias, $label, $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_system")
queue "$getSystem($label, $descr, $sprite)$getProps()" $toStereos("external_system", $tags) as $alias $getLink($link)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Enterprise_Boundary($alias, $label, $tags="", $link="")
Boundary($alias, $label, "Enterprise", $tags, $link)
!endprocedure

!unquoted procedure System_Boundary($alias, $label, $tags="", $link="")
Boundary($alias, $label, "System", $tags, $link)
!endprocedure
' convert it with additional command line argument -DRELATIVE_INCLUDE="." to use locally
!if %variable_exists("RELATIVE_INCLUDE")
!include %get_variable_value("RELATIVE_INCLUDE")/C4_Context.puml
!else
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Context.puml
!endif

' Scope: A single software system.
' Primary elements: Containers within the software system in scope.
' Supporting elements: People and software systems directly connected to the containers.
' Intended audience: Technical people inside and outside of the software development team; including software architects, developers and operations/support staff.

' Colors
' ##################################

!global $CONTAINER_BG_COLOR = "#438DD5"
!global $CONTAINER_BORDER_COLOR = "#3C7FC0"
!global $EXTERNAL_CONTAINER_BG_COLOR = "#B3B3B3"
!global $EXTERNAL_CONTAINER_BORDER_COLOR = "#A6A6A6"

' Styling
' ##################################
UpdateElementStyle("container", $CONTAINER_BG_COLOR, $ELEMENT_FONT_COLOR, $CONTAINER_BORDER_COLOR)
UpdateElementStyle("external_container", $EXTERNAL_CONTAINER_BG_COLOR, $ELEMENT_FONT_COLOR, $EXTERNAL_CONTAINER_BORDER_COLOR)

' shortcuts with default colors
!unquoted procedure AddContainerTag($tagStereo, $bgColor=$CONTAINER_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$CONTAINER_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $techn="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, $techn, $legendText, $legendSprite)
!endprocedure
!unquoted procedure AddExternalContainerTag($tagStereo, $bgColor=$EXTERNAL_CONTAINER_BG_COLOR, $fontColor=$ELEMENT_FONT_COLOR, $borderColor=$EXTERNAL_CONTAINER_BORDER_COLOR, $shadowing="", $shape="", $sprite="", $techn="", $legendText="", $legendSprite="")
AddElementTag($tagStereo, $bgColor, $fontColor, $borderColor, $shadowing, $shape, $sprite, $techn, $legendText, $legendSprite)
!endprocedure

' Layout
' ##################################

SetDefaultLegendEntries("person\nsystem\ncontainer\nexternal_person\nexternal_system\nexternal_container")

!procedure LAYOUT_WITH_LEGEND()
hide stereotype
legend right
|<color:$LEGEND_TITLE_COLOR>**Legend**</color> |
|<$PERSON_BG_COLOR> person |
|<$SYSTEM_BG_COLOR> system |
|<$CONTAINER_BG_COLOR> container |
|<$EXTERNAL_PERSON_BG_COLOR> external person |
|<$EXTERNAL_SYSTEM_BG_COLOR> external system |
|<$EXTERNAL_CONTAINER_BG_COLOR> external container |
endlegend
!endprocedure

' Elements
' ##################################

!function $getContainer($label, $techn, $descr, $sprite)
!$container = ""
!if ($sprite != "")
!$container = $container + $getSprite($sprite) + '\n'
!endif
!$container = $container + '==' + $label
!if ($techn != "")
!$container = $container + '\n//<size:' + $TECHN_FONT_SIZE + '>[' + $techn + ']</size>//'
!endif
!if ($descr != "")
!$container = $container + '\n\n' + $descr
!endif
!return $container
!endfunction

!unquoted procedure Container($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "container")
rectangle "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("container", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure ContainerDb($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "container")
database "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("container", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure ContainerQueue($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "container")
queue "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("container", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure Container_Ext($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "external_container")
rectangle "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("external_container", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure ContainerDb_Ext($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "external_container")
database "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("external_container", $tags) as $alias $getLink($link)
!endprocedure

!unquoted procedure ContainerQueue_Ext($alias, $label, $techn="", $descr="", $sprite="", $tags="", $link="")
!$sprite=$toElementArg($sprite, $tags, "ElementTagSprite", "external_container")
!$techn=$toElementArg($techn, $tags, "ElementTagTechn", "external_container")
queue "$getContainer($label, $techn, $descr, $sprite)$getProps()" $toStereos("external_container", $tags) as $alias $getLink($link)
!endprocedure

' Boundaries
' ##################################

!unquoted procedure Container_Boundary($alias, $label, $tags="", $link="")
Boundary($alias, $label, "Container", $tags, $link)
!endprocedure

AddElementTag("microservice", $shape=EightSidedShape(), $bgColor="CornflowerBlue", $fontColor="white", $legendText="micro service (eight sided)")
AddElementTag("database", $shape=RoundedBoxShape(), $bgColor="MediumSeaGreen", $fontColor="white")
AddElementTag("service", $bgColor="LightSteelBlue", $fontColor="white")
AddElementTag("file system", $bgColor="Teal", $fontColor="white")
AddElementTag("function", $bgColor="lightSkyBlue", $fontColor="white")
AddElementTag("queue", $bgColor="FireBrick", $fontColor="white")
AddElementTag("topic", $bgColor="Maroon", $fontColor="white")
AddElementTag("event stream", $bgColor="Tomato", $fontColor="white")
AddElementTag("gateway", $bgColor="NavajoWhite", $fontColor="black")
AddElementTag("proxy", $bgColor="Moccasin", $fontColor="black")
AddElementTag("firewall", $bgColor="MistyRose", $fontColor="black")
AddElementTag("cache", $bgColor="OliveDrab", $fontColor="white")
AddElementTag("web UI", $bgColor="Coral", $fontColor="white")
AddElementTag("mobile UI", $bgColor="DarkOrange", $fontColor="white")
AddElementTag("watch UI", $bgColor="Orange", $fontColor="white")
AddElementTag("desktop UI", $bgColor="SandyBrown", $fontColor="white")
AddElementTag("terminal UI", $bgColor="Coral", $fontColor="white")
AddElementTag("smart TV UI", $bgColor="OrangeRed", $fontColor="white")
AddElementTag("batch", $bgColor="RoyalBlue", $fontColor="white")
AddElementTag("container", $bgColor="APPLICATION", $fontColor="white")

SHOW_PERSON_OUTLINE()


    
         System_Boundary( ab1d84ee_fc06_4c09_84c6_00afe141d135, "  BatCave Management System") {
 
      ContainerDb(4ef45909_2c16_44c4_a89e_7e35db55f7d1, "Nemesis Database", " ", "A huge database with all the files of supervillains around the world", $tags = "database") 


      Container(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "Nemesis Microservice", " Java", "The single point of truth for supervillains", $tags = "microservice") 


      Container(8dff98b1_63f3_491f_af9c_a4e6dfb5e012, "Batmobile Platform Rotation Microservice", " Java", "Rotates the Batmobile platform", $tags = "microservice") 


      Container(6d811439_33e7_4864_823a_b25556a7458d, "Batcave Terminal", " React", "Impressive user interface used to manage every aspect of the BatCave Management System", $tags = "terminal UI") 


    }

    
         System_Boundary( ab1d84ee_fc06_4c09_84c6_00afe141d135, "  BatCave Management System") {
 
      ContainerDb(4ef45909_2c16_44c4_a89e_7e35db55f7d1, "Nemesis Database", " ", "A huge database with all the files of supervillains around the world", $tags = "database") 


      Container(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "Nemesis Microservice", " Java", "The single point of truth for supervillains", $tags = "microservice") 


      Container(8dff98b1_63f3_491f_af9c_a4e6dfb5e012, "Batmobile Platform Rotation Microservice", " Java", "Rotates the Batmobile platform", $tags = "microservice") 


      Container(6d811439_33e7_4864_823a_b25556a7458d, "Batcave Terminal", " React", "Impressive user interface used to manage every aspect of the BatCave Management System", $tags = "terminal UI") 


    }

    
         System_Boundary( ab1d84ee_fc06_4c09_84c6_00afe141d135, "  BatCave Management System") {
 
      ContainerDb(4ef45909_2c16_44c4_a89e_7e35db55f7d1, "Nemesis Database", " ", "A huge database with all the files of supervillains around the world", $tags = "database") 


      Container(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "Nemesis Microservice", " Java", "The single point of truth for supervillains", $tags = "microservice") 


      Container(8dff98b1_63f3_491f_af9c_a4e6dfb5e012, "Batmobile Platform Rotation Microservice", " Java", "Rotates the Batmobile platform", $tags = "microservice") 


      Container(6d811439_33e7_4864_823a_b25556a7458d, "Batcave Terminal", " React", "Impressive user interface used to manage every aspect of the BatCave Management System", $tags = "terminal UI") 


    }

    
         System_Boundary( ab1d84ee_fc06_4c09_84c6_00afe141d135, "  BatCave Management System") {
 
      ContainerDb(4ef45909_2c16_44c4_a89e_7e35db55f7d1, "Nemesis Database", " ", "A huge database with all the files of supervillains around the world", $tags = "database") 


      Container(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "Nemesis Microservice", " Java", "The single point of truth for supervillains", $tags = "microservice") 


      Container(8dff98b1_63f3_491f_af9c_a4e6dfb5e012, "Batmobile Platform Rotation Microservice", " Java", "Rotates the Batmobile platform", $tags = "microservice") 


      Container(6d811439_33e7_4864_823a_b25556a7458d, "Batcave Terminal", " React", "Impressive user interface used to manage every aspect of the BatCave Management System", $tags = "terminal UI") 


    }

    
     
      
     Person( 9187aa94_04dd_4766_af68_00bb6800fbfb, "  Bruce Wayne")


    
        
             Rel(9187aa94_04dd_4766_af68_00bb6800fbfb, 6d811439_33e7_4864_823a_b25556a7458d, "1. enters Joker search term")
        
             Rel(6d811439_33e7_4864_823a_b25556a7458d, 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "2. passes on the search request")
        
             Rel(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, 4ef45909_2c16_44c4_a89e_7e35db55f7d1, "3. looks up information")
        
             Rel(4ef45909_2c16_44c4_a89e_7e35db55f7d1, 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, "4. Joker profile")
        
             Rel(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, 8dff98b1_63f3_491f_af9c_a4e6dfb5e012, "5. requests platform rotation")
        
             Rel(7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a, 6d811439_33e7_4864_823a_b25556a7458d, "6. Joker profile")
        
             Rel(6d811439_33e7_4864_823a_b25556a7458d, 9187aa94_04dd_4766_af68_00bb6800fbfb, "7. Joker profile")
        
    


SHOW_LEGEND()
@enduml

@startuml
















    skinparam defaultTextAlignment center

    skinparam wrapWidth 200
    skinparam maxMessageSize 150

    skinparam LegendBorderColor transparent
    skinparam LegendBackgroundColor transparent
    skinparam LegendFontColor #FFFFFF

    skinparam shadowing<<legendArea>> false
    skinparam rectangle<<legendArea>> {
    backgroundcolor #00000000
    bordercolor #00000000
    }

    skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam database {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam queue {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam arrow {
    Color #666666
    FontColor #666666
    FontSize 12
    }

    skinparam actor {
    StereotypeFontSize 12
    shadowing false
    style awesome
    }

    skinparam person {
    StereotypeFontSize 12
    shadowing false
    }

    skinparam package {
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontStyle plain
    BackgroundColor transparent
    }

    skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontColor #444444
    BorderColor #444444
    BackgroundColor transparent
    BorderStyle dashed
    }





















































    






























































skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam LegendBorderColor transparent
skinparam LegendBackgroundColor transparent
skinparam LegendFontColor #FFFFFF

skinparam shadowing<<legendArea>> false
skinparam rectangle<<legendArea>> {
    backgroundcolor #00000000
    bordercolor #00000000
}

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam queue {
    StereotypeFontSize 12
    shadowing false
}

skinparam arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam actor {
    StereotypeFontSize 12
    shadowing false
    style awesome
}

skinparam person {
    StereotypeFontSize 12
    shadowing false
}

skinparam package {
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontStyle plain
    BackgroundColor transparent
}

skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontColor #444444
    BorderColor #444444
    BackgroundColor transparent
    BorderStyle dashed
}









































































































skinparam rectangle<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam database<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam queue<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam actor<<person>> {
    StereotypeFontColor #08427B
    FontColor #08427B
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam person<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}


skinparam rectangle<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam database<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam queue<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam actor<<external_person>> {
    StereotypeFontColor #686868
    FontColor #686868
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam person<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}


skinparam rectangle<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam database<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam queue<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam actor<<system>> {
    StereotypeFontColor #1168BD
    FontColor #1168BD
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam person<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}


skinparam rectangle<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam database<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam queue<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam actor<<external_system>> {
    StereotypeFontColor #999999
    FontColor #999999
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam person<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}





sprite $person [48x48/16] {
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
000000000000025788300000000005886410000000000000
000000000007DFFFFFFD9643347BFFFFFFFB400000000000
0000000004EFFFFFFFFFFFFFFFFFFFFFFFFFFB1000000000
000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFD200000000
00000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE10000000
0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB0000000
000000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5000000
000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD000000
000009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF200000
00000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF600000
00000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00000EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF700000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
0000008FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3000000
000000014555555555555555555555555555555300000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
}

sprite $person2 [48x48/16] {
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000002578888300000000005888864100000000000
0000000007DFFFFFFFFD9643347BFFFFFFFFFB4000000000
00000004EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB10000000
0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD2000000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
00003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
0000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF50000
0003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD0000
0009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
0009FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFF2000
0003FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFD0000
0000BFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFF50000
00003FFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFB00000
000006FFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFE100000
0000007FFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFD2000000
00000004EFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFB10000000
0000000007DF8FFFFFFFFFFFFFFFFFFFFFF8FB4000000000
000000000002578888888888888888888864100000000000
}






































skinparam defaultTextAlignment center

skinparam wrapWidth 200
skinparam maxMessageSize 150

skinparam LegendBorderColor transparent
skinparam LegendBackgroundColor transparent
skinparam LegendFontColor #FFFFFF

skinparam shadowing<<legendArea>> false
skinparam rectangle<<legendArea>> {
    backgroundcolor #00000000
    bordercolor #00000000
}

skinparam rectangle {
    StereotypeFontSize 12
    shadowing false
}

skinparam database {
    StereotypeFontSize 12
    shadowing false
}

skinparam queue {
    StereotypeFontSize 12
    shadowing false
}

skinparam arrow {
    Color #666666
    FontColor #666666
    FontSize 12
}

skinparam actor {
    StereotypeFontSize 12
    shadowing false
    style awesome
}

skinparam person {
    StereotypeFontSize 12
    shadowing false
}

skinparam package {
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontStyle plain
    BackgroundColor transparent
}

skinparam rectangle<<boundary>> {
    Shadowing false
    StereotypeFontSize 6
    StereotypeFontColor transparent
    FontColor #444444
    BorderColor #444444
    BackgroundColor transparent
    BorderStyle dashed
}









































































































skinparam rectangle<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam database<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam queue<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam actor<<person>> {
    StereotypeFontColor #08427B
    FontColor #08427B
    BackgroundColor #08427B
    BorderColor #073B6F
}
skinparam person<<person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #08427B
    BorderColor #073B6F
}


skinparam rectangle<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam database<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam queue<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam actor<<external_person>> {
    StereotypeFontColor #686868
    FontColor #686868
    BackgroundColor #686868
    BorderColor #8A8A8A
}
skinparam person<<external_person>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #686868
    BorderColor #8A8A8A
}


skinparam rectangle<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam database<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam queue<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam actor<<system>> {
    StereotypeFontColor #1168BD
    FontColor #1168BD
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}
skinparam person<<system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #1168BD
    BorderColor #3C7FC0
}


skinparam rectangle<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam database<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam queue<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam actor<<external_system>> {
    StereotypeFontColor #999999
    FontColor #999999
    BackgroundColor #999999
    BorderColor #8A8A8A
}
skinparam person<<external_system>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #999999
    BorderColor #8A8A8A
}





sprite $person [48x48/16] {
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
000000000000025788300000000005886410000000000000
000000000007DFFFFFFD9643347BFFFFFFFB400000000000
0000000004EFFFFFFFFFFFFFFFFFFFFFFFFFFB1000000000
000000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFD200000000
00000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE10000000
0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB0000000
000000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5000000
000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD000000
000009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF200000
00000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF600000
00000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
00001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA00000
00000EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF700000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
0000008FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD3000000
000000014555555555555555555555555555555300000000
000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000
}

sprite $person2 [48x48/16] {
0000000000000000000049BCCA7200000000000000000000
0000000000000000006EFFFFFFFFB3000000000000000000
00000000000000001CFFFFFFFFFFFF700000000000000000
0000000000000001EFFFFFFFFFFFFFF80000000000000000
000000000000000CFFFFFFFFFFFFFFFF6000000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
00000000000001FFFFFFFFFFFFFFFFFFF900000000000000
00000000000006FFFFFFFFFFFFFFFFFFFF00000000000000
0000000000000BFFFFFFFFFFFFFFFFFFFF40000000000000
0000000000000EFFFFFFFFFFFFFFFFFFFF70000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000FFFFFFFFFFFFFFFFFFFFF80000000000000
0000000000000DFFFFFFFFFFFFFFFFFFFF60000000000000
0000000000000AFFFFFFFFFFFFFFFFFFFF40000000000000
00000000000006FFFFFFFFFFFFFFFFFFFE00000000000000
00000000000000EFFFFFFFFFFFFFFFFFF800000000000000
000000000000007FFFFFFFFFFFFFFFFFF100000000000000
000000000000000BFFFFFFFFFFFFFFFF5000000000000000
0000000000000001DFFFFFFFFFFFFFF70000000000000000
00000000000000000BFFFFFFFFFFFF500000000000000000
0000000000000000005DFFFFFFFFA1000000000000000000
0000000000000000000037ABB96100000000000000000000
000000000002578888300000000005888864100000000000
0000000007DFFFFFFFFD9643347BFFFFFFFFFB4000000000
00000004EFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB10000000
0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD2000000
000006FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE100000
00003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB00000
0000BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF50000
0003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFD0000
0009FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB000
001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA000
000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8000
000DFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF6000
0009FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFF2000
0003FFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFFD0000
0000BFFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFF50000
00003FFFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFFB00000
000006FFFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFFE100000
0000007FFFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFFD2000000
00000004EFFF8FFFFFFFFFFFFFFFFFFFFFF8FFFB10000000
0000000007DF8FFFFFFFFFFFFFFFFFFFFFF8FB4000000000
000000000002578888888888888888888864100000000000
}


























skinparam rectangle<<container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #438DD5
    BorderColor #3C7FC0
}
skinparam database<<container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #438DD5
    BorderColor #3C7FC0
}
skinparam queue<<container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #438DD5
    BorderColor #3C7FC0
}
skinparam actor<<container>> {
    StereotypeFontColor #438DD5
    FontColor #438DD5
    BackgroundColor #438DD5
    BorderColor #3C7FC0
}
skinparam person<<container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #438DD5
    BorderColor #3C7FC0
}


skinparam rectangle<<external_container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #B3B3B3
    BorderColor #A6A6A6
}
skinparam database<<external_container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #B3B3B3
    BorderColor #A6A6A6
}
skinparam queue<<external_container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #B3B3B3
    BorderColor #A6A6A6
}
skinparam actor<<external_container>> {
    StereotypeFontColor #B3B3B3
    FontColor #B3B3B3
    BackgroundColor #B3B3B3
    BorderColor #A6A6A6
}
skinparam person<<external_container>> {
    StereotypeFontColor #FFFFFF
    FontColor #FFFFFF
    BackgroundColor #B3B3B3
    BorderColor #A6A6A6
}

















skinparam rectangle<<microservice>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor CornflowerBlue
    RoundCorner 0
    DiagonalCorner 18
}
skinparam database<<microservice>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor CornflowerBlue
}
skinparam queue<<microservice>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor CornflowerBlue
}
skinparam actor<<microservice>> {
    StereotypeFontColor CornflowerBlue
    FontColor CornflowerBlue
    BackgroundColor CornflowerBlue
}
skinparam person<<microservice>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor CornflowerBlue
}


skinparam rectangle<<database>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor MediumSeaGreen
    RoundCorner 25
    DiagonalCorner 0
}
skinparam database<<database>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor MediumSeaGreen
}
skinparam queue<<database>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor MediumSeaGreen
}
skinparam actor<<database>> {
    StereotypeFontColor MediumSeaGreen
    FontColor MediumSeaGreen
    BackgroundColor MediumSeaGreen
}
skinparam person<<database>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor MediumSeaGreen
}


skinparam rectangle<<service>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor LightSteelBlue
}
skinparam database<<service>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor LightSteelBlue
}
skinparam queue<<service>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor LightSteelBlue
}
skinparam actor<<service>> {
    StereotypeFontColor LightSteelBlue
    FontColor LightSteelBlue
    BackgroundColor LightSteelBlue
}
skinparam person<<service>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor LightSteelBlue
}


skinparam rectangle<<file system>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Teal
}
skinparam database<<file system>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Teal
}
skinparam queue<<file system>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Teal
}
skinparam actor<<file system>> {
    StereotypeFontColor Teal
    FontColor Teal
    BackgroundColor Teal
}
skinparam person<<file system>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Teal
}


skinparam rectangle<<function>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor lightSkyBlue
}
skinparam database<<function>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor lightSkyBlue
}
skinparam queue<<function>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor lightSkyBlue
}
skinparam actor<<function>> {
    StereotypeFontColor lightSkyBlue
    FontColor lightSkyBlue
    BackgroundColor lightSkyBlue
}
skinparam person<<function>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor lightSkyBlue
}


skinparam rectangle<<queue>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor FireBrick
}
skinparam database<<queue>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor FireBrick
}
skinparam queue<<queue>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor FireBrick
}
skinparam actor<<queue>> {
    StereotypeFontColor FireBrick
    FontColor FireBrick
    BackgroundColor FireBrick
}
skinparam person<<queue>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor FireBrick
}


skinparam rectangle<<topic>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Maroon
}
skinparam database<<topic>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Maroon
}
skinparam queue<<topic>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Maroon
}
skinparam actor<<topic>> {
    StereotypeFontColor Maroon
    FontColor Maroon
    BackgroundColor Maroon
}
skinparam person<<topic>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Maroon
}


skinparam rectangle<<event stream>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Tomato
}
skinparam database<<event stream>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Tomato
}
skinparam queue<<event stream>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Tomato
}
skinparam actor<<event stream>> {
    StereotypeFontColor Tomato
    FontColor Tomato
    BackgroundColor Tomato
}
skinparam person<<event stream>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Tomato
}


skinparam rectangle<<gateway>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor NavajoWhite
}
skinparam database<<gateway>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor NavajoWhite
}
skinparam queue<<gateway>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor NavajoWhite
}
skinparam actor<<gateway>> {
    StereotypeFontColor NavajoWhite
    FontColor NavajoWhite
    BackgroundColor NavajoWhite
}
skinparam person<<gateway>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor NavajoWhite
}


skinparam rectangle<<proxy>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor Moccasin
}
skinparam database<<proxy>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor Moccasin
}
skinparam queue<<proxy>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor Moccasin
}
skinparam actor<<proxy>> {
    StereotypeFontColor Moccasin
    FontColor Moccasin
    BackgroundColor Moccasin
}
skinparam person<<proxy>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor Moccasin
}


skinparam rectangle<<firewall>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor MistyRose
}
skinparam database<<firewall>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor MistyRose
}
skinparam queue<<firewall>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor MistyRose
}
skinparam actor<<firewall>> {
    StereotypeFontColor MistyRose
    FontColor MistyRose
    BackgroundColor MistyRose
}
skinparam person<<firewall>> {
    StereotypeFontColor black
    FontColor black
    BackgroundColor MistyRose
}


skinparam rectangle<<cache>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OliveDrab
}
skinparam database<<cache>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OliveDrab
}
skinparam queue<<cache>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OliveDrab
}
skinparam actor<<cache>> {
    StereotypeFontColor OliveDrab
    FontColor OliveDrab
    BackgroundColor OliveDrab
}
skinparam person<<cache>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OliveDrab
}


skinparam rectangle<<web UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam database<<web UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam queue<<web UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam actor<<web UI>> {
    StereotypeFontColor Coral
    FontColor Coral
    BackgroundColor Coral
}
skinparam person<<web UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}


skinparam rectangle<<mobile UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor DarkOrange
}
skinparam database<<mobile UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor DarkOrange
}
skinparam queue<<mobile UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor DarkOrange
}
skinparam actor<<mobile UI>> {
    StereotypeFontColor DarkOrange
    FontColor DarkOrange
    BackgroundColor DarkOrange
}
skinparam person<<mobile UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor DarkOrange
}


skinparam rectangle<<watch UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Orange
}
skinparam database<<watch UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Orange
}
skinparam queue<<watch UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Orange
}
skinparam actor<<watch UI>> {
    StereotypeFontColor Orange
    FontColor Orange
    BackgroundColor Orange
}
skinparam person<<watch UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Orange
}


skinparam rectangle<<desktop UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor SandyBrown
}
skinparam database<<desktop UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor SandyBrown
}
skinparam queue<<desktop UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor SandyBrown
}
skinparam actor<<desktop UI>> {
    StereotypeFontColor SandyBrown
    FontColor SandyBrown
    BackgroundColor SandyBrown
}
skinparam person<<desktop UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor SandyBrown
}


skinparam rectangle<<terminal UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam database<<terminal UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam queue<<terminal UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}
skinparam actor<<terminal UI>> {
    StereotypeFontColor Coral
    FontColor Coral
    BackgroundColor Coral
}
skinparam person<<terminal UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor Coral
}


skinparam rectangle<<smart TV UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OrangeRed
}
skinparam database<<smart TV UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OrangeRed
}
skinparam queue<<smart TV UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OrangeRed
}
skinparam actor<<smart TV UI>> {
    StereotypeFontColor OrangeRed
    FontColor OrangeRed
    BackgroundColor OrangeRed
}
skinparam person<<smart TV UI>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor OrangeRed
}


skinparam rectangle<<batch>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor RoyalBlue
}
skinparam database<<batch>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor RoyalBlue
}
skinparam queue<<batch>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor RoyalBlue
}
skinparam actor<<batch>> {
    StereotypeFontColor RoyalBlue
    FontColor RoyalBlue
    BackgroundColor RoyalBlue
}
skinparam person<<batch>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor RoyalBlue
}


skinparam rectangle<<container>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor APPLICATION
}
skinparam database<<container>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor APPLICATION
}
skinparam queue<<container>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor APPLICATION
}
skinparam actor<<container>> {
    StereotypeFontColor APPLICATION
    FontColor APPLICATION
    BackgroundColor APPLICATION
}
skinparam person<<container>> {
    StereotypeFontColor white
    FontColor white
    BackgroundColor APPLICATION
}





    
rectangle "==  BatCave Management System\n<size:12>[System]</size>" <<boundary>> as ab1d84ee_fc06_4c09_84c6_00afe141d135  {
 
      database "==Nemesis Database\n//<size:12>[ ]</size>//\n\nA huge database with all the files of supervillains around the world" <<database>><<container>> as 4ef45909_2c16_44c4_a89e_7e35db55f7d1  


      rectangle "==Nemesis Microservice\n//<size:12>[ Java]</size>//\n\nThe single point of truth for supervillains" <<microservice>><<container>> as 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a  


      rectangle "==Batmobile Platform Rotation Microservice\n//<size:12>[ Java]</size>//\n\nRotates the Batmobile platform" <<microservice>><<container>> as 8dff98b1_63f3_491f_af9c_a4e6dfb5e012  


      rectangle "==Batcave Terminal\n//<size:12>[ React]</size>//\n\nImpressive user interface used to manage every aspect of the BatCave Management System" <<terminal UI>><<container>> as 6d811439_33e7_4864_823a_b25556a7458d  


    }

    
rectangle "==  BatCave Management System\n<size:12>[System]</size>" <<boundary>> as ab1d84ee_fc06_4c09_84c6_00afe141d135  {
 
      database "==Nemesis Database\n//<size:12>[ ]</size>//\n\nA huge database with all the files of supervillains around the world" <<database>><<container>> as 4ef45909_2c16_44c4_a89e_7e35db55f7d1  


      rectangle "==Nemesis Microservice\n//<size:12>[ Java]</size>//\n\nThe single point of truth for supervillains" <<microservice>><<container>> as 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a  


      rectangle "==Batmobile Platform Rotation Microservice\n//<size:12>[ Java]</size>//\n\nRotates the Batmobile platform" <<microservice>><<container>> as 8dff98b1_63f3_491f_af9c_a4e6dfb5e012  


      rectangle "==Batcave Terminal\n//<size:12>[ React]</size>//\n\nImpressive user interface used to manage every aspect of the BatCave Management System" <<terminal UI>><<container>> as 6d811439_33e7_4864_823a_b25556a7458d  


    }

    
rectangle "==  BatCave Management System\n<size:12>[System]</size>" <<boundary>> as ab1d84ee_fc06_4c09_84c6_00afe141d135  {
 
      database "==Nemesis Database\n//<size:12>[ ]</size>//\n\nA huge database with all the files of supervillains around the world" <<database>><<container>> as 4ef45909_2c16_44c4_a89e_7e35db55f7d1  


      rectangle "==Nemesis Microservice\n//<size:12>[ Java]</size>//\n\nThe single point of truth for supervillains" <<microservice>><<container>> as 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a  


      rectangle "==Batmobile Platform Rotation Microservice\n//<size:12>[ Java]</size>//\n\nRotates the Batmobile platform" <<microservice>><<container>> as 8dff98b1_63f3_491f_af9c_a4e6dfb5e012  


      rectangle "==Batcave Terminal\n//<size:12>[ React]</size>//\n\nImpressive user interface used to manage every aspect of the BatCave Management System" <<terminal UI>><<container>> as 6d811439_33e7_4864_823a_b25556a7458d  


    }

    
rectangle "==  BatCave Management System\n<size:12>[System]</size>" <<boundary>> as ab1d84ee_fc06_4c09_84c6_00afe141d135  {
 
      database "==Nemesis Database\n//<size:12>[ ]</size>//\n\nA huge database with all the files of supervillains around the world" <<database>><<container>> as 4ef45909_2c16_44c4_a89e_7e35db55f7d1  


      rectangle "==Nemesis Microservice\n//<size:12>[ Java]</size>//\n\nThe single point of truth for supervillains" <<microservice>><<container>> as 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a  


      rectangle "==Batmobile Platform Rotation Microservice\n//<size:12>[ Java]</size>//\n\nRotates the Batmobile platform" <<microservice>><<container>> as 8dff98b1_63f3_491f_af9c_a4e6dfb5e012  


      rectangle "==Batcave Terminal\n//<size:12>[ React]</size>//\n\nImpressive user interface used to manage every aspect of the BatCave Management System" <<terminal UI>><<container>> as 6d811439_33e7_4864_823a_b25556a7458d  


    }

    
     
      
     person "==  Bruce Wayne" <<person>> as 9187aa94_04dd_4766_af68_00bb6800fbfb 


    
        
             9187aa94_04dd_4766_af68_00bb6800fbfb - ->> 6d811439_33e7_4864_823a_b25556a7458d : **1. enters Joker search term**
        
             6d811439_33e7_4864_823a_b25556a7458d - ->> 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a : **2. passes on the search request**
        
             7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a - ->> 4ef45909_2c16_44c4_a89e_7e35db55f7d1 : **3. looks up information**
        
             4ef45909_2c16_44c4_a89e_7e35db55f7d1 - ->> 7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a : **4. Joker profile**
        
             7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a - ->> 8dff98b1_63f3_491f_af9c_a4e6dfb5e012 : **5. requests platform rotation**
        
             7e1d4c8d_6fd1_43ca_ad64_7663c3c9823a - ->> 6d811439_33e7_4864_823a_b25556a7458d : **6. Joker profile**
        
             6d811439_33e7_4864_823a_b25556a7458d - ->> 9187aa94_04dd_4766_af68_00bb6800fbfb : **7. Joker profile**
        
    


hide stereotype
legend right
<#00000000,#00000000>|<color:#000000>**Legend**</color> |
|<#08427B><color:#073B6F> <U+25AF></color> <color:#FFFFFF> person </color> |
|<#CornflowerBlue><color:CornflowerBlue> <U+25AF></color> <color:white> micro service (eight sided) </color> |
|<#MediumSeaGreen><color:MediumSeaGreen> <U+25AF></color> <color:white> database (rounded box) </color> |
|<#Coral><color:Coral> <U+25AF></color> <color:white> terminal UI </color> |
endlegend
@enduml

PlantUML version 1.2022.5(Sat Apr 30 12:55:52 CEST 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: nl
Country: BE
--></g></svg>