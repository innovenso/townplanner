@import txt.DocumentClass
@import txt.Preamble
@import com.thedeanda.lorem.LoremIpsum
@import com.innovenso.townplanner.model.samples.SampleFactory
@import txt.Document
@import txt.DocumentTitle
@import txt.UsePackage
@import txt.Section
@import txt.Text
@import txt.SubSection
@import txt.Drawing
@import txt.CommonSettings
@import txt.BookSettings
@import txt.MarginDrawing
@import com.innovenso.townplan.io.context.Output
@import txt.Image
@import com.innovenso.townplanner.model.concepts.views.CompiledFullTownPlanView
@import txt.FrontMatter
@import txt.BookTableOfContents
@import txt.MainMatter
@import txt.KaoBook
@import com.innovenso.townplanner.model.concepts.views.CompiledTechnologyRadar
@import txt.Part
@import txt.Chapter
@import latex.lib.txt.Description
@import latex.lib.txt.ArchitectureVerdict
@import txt.Paragraph
@import txt.SubParagraph
@import latex.lib.txt.Dictionary
@import latex.lib.techradar.txt.RadarPositionPicture
@(view: CompiledTechnologyRadar)
@KaoBook()
@Document {
  @Preamble(title = Some(view.title), author = None, titleHead = Some("Innovenso Townplanner"))
  @DocumentTitle()
  @FrontMatter()
  @BookTableOfContents()
  @MainMatter()

  @Part(title = "Radar") {
    @for(category <- view.categories) {
      @if(view.technologies(category.technologyClass).nonEmpty) {
        @Chapter(title = category.name) {
          @for(circle <- view.circles) {
            @if(view.technologies(category.technologyClass, circle.getClass).nonEmpty) {
              @Section(title = circle.name) {
                @for(technology <- view.technologies(category.technologyClass, circle.getClass)) {
                  @SubSection(title = technology.title) {
                    @MarginDrawing(caption = Some(technology.title)) {
                      @RadarPositionPicture(technology)
                    }
                    @Description(technology)
                    @Paragraph(title = "Architecture Verdict") {
                      @ArchitectureVerdict(technology)
                    }
                    @Paragraph(title = "Usage") {
                    @if(view.isUsed(technology)) {
                        @if(view.isUsedByPlatforms(technology)) {
                          @SubParagraph(title = "Platforms") {
                            @Dictionary(view.platformsImplementedWith(technology).map(it => (it.title, it.descriptions.headOption.map(_.value).getOrElse("-"))).toList)
                          }
                        }
                        @if(view.isUsedBySystems(technology)) {
                          @SubParagraph(title = "Systems") {
                            @Dictionary(view.systemsImplementedWith(technology).map(it => (it.title, it.descriptions.headOption.map(_.value).getOrElse("-"))).toList)
                          }
                        }
                        @if(view.isUsedByContainers(technology)) {
                          @SubParagraph(title = "Containers") {
                            @Dictionary(view.containersImplementedWith(technology).map(it => (it.title, it.descriptions.headOption.map(_.value).getOrElse("-"))).toList)
                          }
                        }
                      } else {
                        @Text(s"We don't know of any IT Platforms, IT Systems or IT Containers where ${technology.title} is currently used.")
                      }
                    }
                    @Paragraph(title = "Knowledge") {
                      @if(view.isKnown(technology)) {
                          @Dictionary(view.businessActorsWithKnowledgeOf(technology).map(it => (it.title, it.descriptions.headOption.map(_.value).getOrElse("-"))))
                      } else {
                        @Text(s"We don't know of any person or team that currently has knowledge of ${technology.title}.")
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}